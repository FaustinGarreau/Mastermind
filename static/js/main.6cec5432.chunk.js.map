{"version":3,"sources":["Nav.js","Rond.js","Plateau.js","Play.js","Modal.js","App.js","serviceWorker.js","index.js"],"names":["Nav","className","id","src","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","href","Rond","props","selected","line","Plateau","play","game","map","element","index","key","currentLine","Play","onClick","colorize","undo","submit","class","Modal","isWin","message","closeModal","App","state","iswin","currentCase","combinationToFind","generateCombination","change","bind","compare","color","gameBis","this","push","setState","pop","combination","good","bad","length","includes","console","log","indexOf","result","l","combinate","i","random","Math","floor","React","Component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.6cec5432.chunk.js","sourcesContent":["import React from 'react';\n\nimport './App.css';\n\nfunction Nav() {\n    return (\n        <header className=\"App-header\">\n        <nav className=\"navbar navbar-expand-lg navbar-light bg-light right\"> \n        <img id=\"logo\" src={\"http://www.billselby.com/Graphics/PopUps/PopUps2/gamelogos/mastermind.jpg\"}/>\n    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n    <span className=\"navbar-toggler-icon\"></span>\n    </button>\n    <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n    <div className=\"navbar-nav link pause\">\n        <a className=\"nav-item nav-link\" href=\"#\">Score</a>\n        <a className=\"nav-item nav-link\" href=\"https://docs.google.com/presentation/d/191Zc9zGeZ5rJx-_DbMx6Edh6-gdC8SK0dcDsDcQvF3M/edit#slide=id.g706c6c5dc2_0_51\">RÃ©gles du jeu</a>\n    </div>\n    </div>\n</nav>\n    </header>\n    );\n}\n\nexport default Nav;\n","import React from 'react';\n\nimport './App.css';\n\nfunction Rond(props) {\n    return (\n    <main>\n        <div className=\"d-flex justify-content-around margin\">\n            <div className={\"ligne d-flex justify-content-around \"+(props.selected ? 'bg' : '')}>\n                <div className={\"rond rounded-circle \" + (props.line[0][0] ? props.line[0][0]: \"\")}></div>\n                <div className={\"rond rounded-circle \" + (props.line[0][1] ? props.line[0][1]: \"\")}></div>\n                <div className={\"rond rounded-circle \" + (props.line[0][2] ? props.line[0][2]: \"\")}></div>\n                <div className={\"rond rounded-circle \" + (props.line[0][3] ? props.line[0][3]: \"\")}></div>\n            </div>\n        <div className={\"littleligne \"+(props.selected ? 'bg' : '')}>\n            <div className=\"d-flex justify-content-around\">\n                <div className={\"rond2 rounded-circle \" + (props.line[1][0] ? props.line[1][0]: \"\")}></div>\n                <div className={\"rond2 rounded-circle \" + (props.line[1][1] ? props.line[1][1]: \"\")}></div>\n            </div>\n            <div className=\"d-flex justify-content-around\">\n                <div className={\"rond2 rounded-circle \" + (props.line[1][2] ? props.line[1][2]: \"\")}></div>\n                <div className={\"rond2 rounded-circle \" + (props.line[1][3] ? props.line[1][3]: \"\")}></div>\n            </div>\n            </div>\n        </div>\n    </main>\n    );\n}\n\nexport default Rond;\n","import React from 'react';\nimport Rond from './Rond';\n\nfunction Plateau(props) {\n    const play = props.game.map((element, index) => (\n        <Rond key={index} selected={props.currentLine == index} line={element}></Rond>\n    ))\n    return (\n        <div className=\"plateau\">\n            {play}\n        </div>\n    )\n}\nexport default Plateau;\n","import React from 'react';\nimport Interraction from \"./Interraction\";\nimport './App.css';\nfunction Play(props) {\n    return (\n    <footer>\n        \n        <div className=\"d-flex justify-content-around\">\n        <div className=\"d-flex\">\n            <div className=\"violet rounded-circle\" onClick={() => props.colorize(\"violet\")}></div>\n            <div className=\"grey rounded-circle\" onClick={() => props.colorize(\"grey\")}></div>\n            <div className=\"blue rounded-circle\" onClick={() => props.colorize(\"blue\")}></div>\n            <div className=\"yellow rounded-circle\" onClick={() => props.colorize(\"yellow\")}></div>\n            <div className=\"red rounded-circle\" onClick={() => props.colorize(\"red\")}></div>\n            <div className=\"green rounded-circle\" onClick={() => props.colorize(\"green\")}></div>\n        </div>\n        <div className=\"d-flex\"> \n        <button onClick={props.undo} type=\"button\" className=\"btn btn-primary btn-sm\">Undo</button>\n        <button onClick={props.submit} type=\"button\" class=\"btn btn-primary\" data-toggle=\"modal\" data-target=\"#exampleModal\">Submit</button>\n        </div>\n        </div>\n        </footer>\n    );\n}\n\nexport default Play;\n","import React from 'react';\n\nimport './App.css';\nimport { tsPropertySignature } from '@babel/types';\n\nfunction Modal(props) {\n    return (\n    <section>\n        <div  className={\"modal \" + props.isWin}>\n            <div id=\"back\">\n            <p className=\"bottom\">{props.message}</p>\n            <span onClick={props.closeModal}>x</span>\n            </div>\n        </div>\n    </section>\n    );\n}\n\nexport default Modal;","import React from 'react';\nimport './App.css';\nimport Nav from './Nav';\nimport Plateau from './Plateau';\nimport Play from './Play';\nimport Modal from './Modal';\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)  \n    this.state = {\n      iswin : \"loose\",\n      currentCase: 0,\n      currentLine: 0,\n      message: \"\",\n      combinationToFind: this.generateCombination(),\n      game: [\n        [[], []],\n        [[], []],\n        [[], []],\n        [[], []],\n        [[], []],\n        [[], []],\n        [[], []],\n        [[], []],\n        [[], []],\n        [[], []],\n      ]\n    } \n    this.change = this.change.bind(this)\n    this.undo = this.undo.bind(this)\n    this.compare = this.compare.bind(this)\n    this.submit = this.submit.bind(this)\n    this.closeModal = this.closeModal.bind(this)\n    this.generateCombination = this.generateCombination.bind(this)\n  }\n\n  change(color) {\n    const gameBis = [...this.state.game]\n    if (this.state.currentCase < 4) {\n      gameBis[this.state.currentLine][0].push(color)\n    this.setState(state => ({\n      game: gameBis,\n      currentCase: state.currentCase + 1,\n    })) \n    }\n  }\n\n  undo() {\n    const gameBis = [...this.state.game]\n    if (this.state.currentCase > 0) {\n      gameBis[this.state.currentLine][0].pop()\n\n    this.setState(state => ({\n      game: gameBis,\n      currentCase: state.currentCase - 1,\n    })) \n\n    }\n      }\n\n    compare() {\n      let combination = [...this.state.game[this.state.currentLine][0]]\n      let combinationToFind = [...this.state.combinationToFind]\n      let good = 0\n      let bad = 0\n      for (let index = 0; index < combination.length; index++) {\n          if (combination[index] == combinationToFind[index]) {\n            good ++\n            combinationToFind[index] = \"z\"\n            combination[index] = \"a\"\n          }\n      }\n      for (let index = 0; index < combinationToFind.length; index++) {\n            if (combinationToFind.includes(combination[index])) {\n              console.log(\"bad\")\n\n              bad ++\n              combinationToFind[combinationToFind.indexOf(combination[index])] = \"a\"\n              combination[index] = \"z\"\n            }     \n      }\n      return [good,bad]\n    }\n    submit () {\n      let combinationToFind = [...this.state.combinationToFind]\n      let currentLine = this.state.currentLine\n      let currentCase = this.state.currentCase\n      let gameBis = [...this.state.game]\n      if (this.state.currentCase == 4) {\n        let result = this.compare()\n        console.log(result);\n        \n        for (let l = 0; l < result[0]; l++) {\n          gameBis[this.state.currentLine][1].push(\"black\")\n        }\n        for (let l = 0; l < result[1]; l++) {\n          gameBis[this.state.currentLine][1].push(\"gray\")\n        }\n        if (result[0] == 4) {\n          this.setState(state => ({\n            iswin : \"win\",\n            message: \"tu as win gg\"\n          })) \n          } \n        if (currentLine == 9 &&  result[0] != 4) {\n          this.setState(state => ({\n            iswin : \"win\",\n            message: \"tu as loose desolÃ© gros la combinaison Ã©tait\"+\" \"+ combinationToFind\n          })) \n        }\n\n        this.setState(state => ({\n          game: gameBis,\n          currentLine: state.currentLine + 1,\n          currentCase: 0\n        }))\n      }\n    }\n\n    closeModal() {\n      this.setState(state => ({\n        iswin : \"loose\",\n        currentCase: 0,\n        currentLine: 0,\n        game: [\n          [[], []],\n          [[], []],\n          [[], []],\n          [[], []],\n          [[], []],\n          [[], []],\n          [[], []],\n          [[], []],\n          [[], []],\n          [[], []],\n        ]\n      })) \n    }\n\n    generateCombination() {\n        let combinate = []\n        for (let i = 0; i < 4; i++) {\n            let random = Math.floor(Math.random()*6)\n            let colors = [\"red\", \"blue\", \"violet\", \"yellow\", \"green\", \"grey\"]\n            combinate.push(colors[random])\n        }\n        return combinate\n    }  \n  render() {\n    return (\n    <div className=\"App\">\n      <Nav></Nav>\n        <Plateau currentLine={this.state.currentLine} game={this.state.game}>\n        </Plateau>\n        <Play colorize={this.change} undo={this.undo} submit={this.submit}></Play>\n        <Modal message={this.state.message} closeModal={this.closeModal} isWin={this.state.iswin}></Modal>\n        \n    </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}